devtools::load_all(".")
source('~/thesis/KiNN/R/kinn.R')
search()
package.skeleton("KiNN")
setwd("~/thesis/")
getwd()
package.skeleton("KiNN")
library(KiNN)
getwd()
cd ..
setwd("~/thesis")
source('~/thesis/test.R')
library(KiNN)
source('~/thesis/test.R')
library(KiNN)
source('~/thesis/test.R')
library(KiNN)
source('~/thesis/test.R')
library(KiNN)
source('~/thesis/test.R')
library(KiNN)
source('~/thesis/test.R')
load(file="mov.Rdata")->l
l
class(mov)
?load
ls()
mov
debugSource('~/thesis/testmov.R')
View(dfxy)
debugSource('~/thesis/testmov.R')
cor(ygraph,dfxy[-inTrain,"y"])
debugSource('~/thesis/testmov.R')
cor(ptest,dfxy[-inTrain,"y"])
cor(ygraph,dfxy[-inTrain,"y"])
debugSource('~/thesis/testmov.R')
cbind(dfxy[-inTrain,"truey"],ygraph)->l
cor(l[cl,1],exp(l[cl,2]))
cor(l[,1],exp(l[,2]))
cbind(dfxy[-inTrain,"truey"],ptest)->l
cor(l[cl,1],exp(l[cl,2]))
cbind(dfxy[-inTrain,"truey"],ptest)->l
c
cbind(dfxy[-inTrain,"truey"],ptest)->l
cor(l[,1],exp(l[,2]))
debugSource('~/thesis/testmov.R')
cbind(dfxy[-inTrain,"y"],pgraph)->l
cor(l[,1],l[,2])
cor(ygraph,dfxy[-inTrain,"y"])
dev.off()
library(KiNN)
library(MASS)
library(KiNN)
data()
warnings()
sig<-function(x) 1/(1+exp(-x))
x<-runif(n = 100,min=-2,max=2)
sig(x)
plot(x,sig(x))
plot(x,sig(x),type = "l")
line(x,sig(x))
plot(x,sig(x))
plot(x,sig(x)(1-sig(x)))
plot(x,sig(x)*(1-sig(x)))
library(KiNN)
estimate
source('~/Library/Mobile Documents/com~apple~CloudDocs/Thesis/R/try.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/Thesis/R/try2.R')
X <- as.matrix(c(1, 2, 3, 4, 5, 6), ncol = 1)
Y <- as.matrix(c(1, 2, 3, 4, 5, 6), ncol = 1)
x <- as.matrix(c(2.5, 3.8, 5), ncol = 1)
gmodel <- buildGraphModel(X, Y)
ygraph <- predict.graph(gmodel, x)
plot(X, Y)
plotGraphs(gmodel)
cbind(X,Y)->dxy
kinn(Y~X,data=dxy)->g
dxy
dxy<-colnames("X","Y")
colnames(dxy)
colnames(dxy)<-c("X","Y")
dxy
kinn(Y~X)
kinn(Y~X,dxy)
plot(g)
g
library(KiNN)
kinn(Y~X,data=dxy)->g
kinn(Y~X,dxy)
dxy
colnames(dxy)<-c("X","Y")
library(KiNN)
kinn(Y~X,data=dxy)->g
dxy
collnames(dxy)<-c("X","Y")
colnames(dxy)<-c("X","Y")
dxy
kinn(Y~X,data=dxy)->g
x <- as.matrix(c(2.5, 3.8, 5), ncol = 1)
plotGraphs(g)
example()
source('~/thesis/KiNN/R/simple_exmaple.R')
example()
source('~/thesis/KiNN/R/simple_exmaple.R')
X<-as.matrix(c(1,2,3,4,5,6),ncol=1)
Y<-as.matrix(c(1,2,3,4,5,6),ncol=1)
cbind(X,Y)->lm
as.data.frame((lm))
learn<-as.data.frame(cbind(X,Y),colnames("X","Y"))
learn<-as.data.frame(cbind(X,Y),colnames=c("X","Y"))
X<-as.matrix(c(1,2,3,4,5,6),ncol=1)
Y<-as.matrix(c(1,2,3,4,5,6),ncol=1)
learn<-as.data.frame(cbind(X,Y),colnames=c("X","Y"))
X<-as.matrix(c(2.5,3.8,5),ncol=1)
test<-as.data.frame(X,colnames=c("X"))
test
test<-as.data.frame(X,colnames=c("X"))
test
colnames(test)
X<-as.matrix(c(2.5,3.8,5),ncol=1)
X
test<-as.data.frame(X,colnames=c("X"))
test
test<-as.data.frame(X,colnames="X")
X
test
test<-as.data.frame(X,colnames=c("X"))
test
test<-learn
learn
X<-as.matrix(c(1,2,3,4,5,6),ncol=1)
Y<-as.matrix(c(1,2,3,4,5,6),ncol=1)
learn<-as.data.frame(cbind(X,Y),colnames=c("X","Y"))
learn
colnames(learn)
learn<-as.data.frame(cbind(X,Y))
colnames(learn)<-c("X","Y")
learn
x<-as.matrix(c(2.5,3.8,5),ncol=1)
test<-as.data.frame(x)
colnames(test)<-c("X")
test
gmodel<-kinn(Y~X,learn)
predict(gmodel,test)
predict.kinn(gmodel,test)
source('~/thesis/KiNN/R/simple_exmaple.R')
X<-as.matrix(c(1,2,3,4,5,6),ncol=1)
Y<-as.matrix(c(1,2,3,4,5,6),ncol=1)
learn<-as.data.frame(cbind(X,Y))
colnames(learn)<-c("X","Y")
x<-as.matrix(c(2.5,3.8,5),ncol=1)
test<-as.data.frame(x)
colnames(test)<-c("X")
gmodel<-kinn(Y~X,learn)
predict.kinn(gmodel,test)
plotGraphs(gmodel)
source('~/thesis/KiNN/R/simple_exmaple.R')
plot(learn$X,learn$Y)
test$Y<-predict.kinn(gmodel,test)
points(test$X,test$Y)
?points
points(test$X,test$Y,pch=5)
plot(learn$X,learn$Y,bg="red")
plot(learn$X,learn$Y,type="l")
gmodel<-kinn(Y~X,learn)
test$Y<-predict.kinn(gmodel,test)
points(test$X,test$Y,pch=5)
?points
plot(learn$X,learn$Y,pch=16)
gmodel<-kinn(Y~X,learn)
test$Y<-predict.kinn(gmodel,test)
points(test$X,test$Y,pch=5)
learn<-as.data.frame(cbind(X,Y))
colnames(learn)<-c("X","Y")
x<-as.matrix(c(2.5,3.8,5.5),ncol=1)
test<-as.data.frame(x)
colnames(test)<-c("X")
plot(learn$X,learn$Y,pch=16)
gmodel<-kinn(Y~X,learn)
test$Y<-predict.kinn(gmodel,test)
points(test$X,test$Y,pch=5)
plot(learn$X,learn$Y,pch=16,xlab = "X",ylab = "Y")
gmodel<-kinn(Y~X,learn)
test$Y<-predict.kinn(gmodel,test)
points(test$X,test$Y,pch=5)
message("adding predicted points to graph")
points(test$X,test$Y,pch=5)
source('~/thesis/KiNN/R/simple_exmaple.R')
setwd("~/thesis/KiNN/R")
library(KiNN)
source("~/thesis/KiNN/R/unexpLinearNoise.R")
